<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yidu.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.yidu.domain.Role">
    <id column="role_id" property="roleId" />
    <result column="role_name" property="roleName" />
    <result column="role_code" property="roleCode" />
    <result column="role_describe" property="roleDescribe" />
    <result column="isva" property="isva" />
    <result column="optime" property="optime" />
    <result column="oper" property="oper" />
    <result column="sort" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_code, role_describe, isva, optime, oper, sort
  </sql>
  <select id="queryList" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from drug_role where isva ='是' 
  	<if test="role.roleId !=null and role.roleId != '' ">
  		and role_id=#{role.roleId}
  	</if>
  	<if test="role.roleName !=null and role.roleName != '' ">
  		and role_name like CONCAT(CONCAT('%',#{role.roleName},'%'))
  	</if>
  	<if test="role.roleCode !=null and role.roleCode != '' ">
  		and role_code=#{role.roleCode}
  	</if>
  	<if test="role.roleDescribe !=null and role.roleDescribe != '' ">
  		and role_describe=#{role.roleDescribe}
  	</if>
  	order by (sort+0) desc 
   	limit #{page.startRows},#{page.rows}
  </select>
  <select id="queryCount" parameterType="com.yidu.domain.Role" resultType="int">
  	select count(*) from drug_role where isva ='是'
  	<if test="roleId !=null and roleId != '' ">
  		and role_id=#{roleId}
  	</if>
  	<if test="roleName !=null and roleName != '' ">
  		and role_name like CONCAT(CONCAT('%',#{roleName},'%'))
  	</if>
  	<if test="roleCode !=null and roleCode != '' ">
  		and role_Code=#{roleCode}
  	</if>
  	<if test="roleDescribe !=null and roleDescribe != '' ">
  		and role_describe=#{roleDescribe}
  	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from drug_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from drug_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yidu.domain.Role">
    insert into drug_role (role_id, role_name, role_code, 
      role_describe, isva, optime, 
      oper, sort)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{roleDescribe,jdbcType=VARCHAR}, #{isva,jdbcType=VARCHAR}, #{optime,jdbcType=TIMESTAMP}, 
      #{oper,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yidu.domain.Role">
    insert into drug_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleDescribe != null">
        role_describe,
      </if>
      <if test="isva != null">
        isva,
      </if>
      <if test="optime != null">
        optime,
      </if>
      <if test="oper != null">
        oper,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleDescribe != null">
        #{roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="isva != null">
        #{isva,jdbcType=VARCHAR},
      </if>
      <if test="optime != null">
        #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="oper != null">
        #{oper,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yidu.domain.Role">
    update drug_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleDescribe != null">
        role_describe = #{roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="isva != null">
        isva = #{isva,jdbcType=VARCHAR},
      </if>
      <if test="optime != null">
        optime = #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="oper != null">
        oper = #{oper,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yidu.domain.Role">
    update drug_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      role_describe = #{roleDescribe,jdbcType=VARCHAR},
      isva = #{isva,jdbcType=VARCHAR},
      optime = #{optime,jdbcType=TIMESTAMP},
      oper = #{oper,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="batchdelete" >
  	update drug_role set isva = '否'
    where role_id in 
    <foreach collection="list" item="ids" open="(" separator="," close=")">
      #{ids} 
    </foreach>
  </update>
</mapper>