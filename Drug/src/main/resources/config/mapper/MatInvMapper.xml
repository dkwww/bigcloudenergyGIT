<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yidu.dao.MatInvMapper">
  <resultMap id="BaseResultMap" type="com.yidu.domain.MatInv">
    <id column="mi_id" jdbcType="VARCHAR" property="miId" />
    <result column="mi_amount" jdbcType="INTEGER" property="miAmount" />
    <result column="mat_id" jdbcType="VARCHAR" property="matId" />
    <result column="isva" jdbcType="VARCHAR" property="isva" />
    <result column="optime" jdbcType="TIMESTAMP" property="optime" />
    <result column="oper" jdbcType="VARCHAR" property="oper" />
    <result column="sort" jdbcType="VARCHAR" property="sort" />
    <result column="mat_name" jdbcType="VARCHAR" property="matName" />
    <result column="mt_id" jdbcType="VARCHAR" property="mtId" />
    <result column="mt_name" jdbcType="VARCHAR" property="mtName" />
    <result column="qdet_fk_id" jdbcType="VARCHAR" property="qdetFkId" />
    
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.yidu.controller.vo.Repertory">
    <result column="indexs" property="value" />
    <result column="mat_name" property="name" />
  </resultMap>
  <sql id="Base_Column_List">
    mi_id, mi_amount, mat_id, isva, optime, oper, sort,mat_name,mt_id,mt_name
  </sql>
  <select id="queryMaterials" resultMap="BaseResultMap2">
  	select sum(i.mi_amount) as indexs,m.mat_name,m.mat_id from drug_mat_inv i,drug_material m where i.mat_id=m.mat_id GROUP BY m.mat_name,m.mat_id ORDER BY sum(i.mi_amount) asc LIMIT 5
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from drug_mat_inv
    where mi_id = #{miId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from drug_mat_inv
    where mi_id = #{miId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yidu.domain.MatInv">
    insert into drug_mat_inv (mi_id, mi_amount, mat_id, 
      isva, optime, oper, 
      sort)
    values (#{miId,jdbcType=VARCHAR}, #{miAmount,jdbcType=INTEGER}, #{matId,jdbcType=VARCHAR}, 
      #{isva,jdbcType=VARCHAR}, #{optime,jdbcType=TIMESTAMP}, #{oper,jdbcType=VARCHAR}, 
      #{sort,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yidu.domain.MatInv">
    insert into drug_mat_inv
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="miId != null">
        mi_id,
      </if>
      <if test="miAmount != null">
        mi_amount,
      </if>
      <if test="matId != null">
        mat_id,
      </if>
      <if test="isva != null">
        isva,
      </if>
      <if test="optime != null">
        optime,
      </if>
      <if test="oper != null">
        oper,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="miId != null">
        #{miId,jdbcType=VARCHAR},
      </if>
      <if test="miAmount != null">
        #{miAmount,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        #{matId,jdbcType=VARCHAR},
      </if>
      <if test="isva != null">
        #{isva,jdbcType=VARCHAR},
      </if>
      <if test="optime != null">
        #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="oper != null">
        #{oper,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yidu.domain.MatInv">
    update drug_mat_inv
    <set>
      <if test="miAmount != null">
        mi_amount = #{miAmount,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=VARCHAR},
      </if>
      <if test="isva != null">
        isva = #{isva,jdbcType=VARCHAR},
      </if>
      <if test="optime != null">
        optime = #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="oper != null">
        oper = #{oper,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=VARCHAR},
      </if>
    </set>
    where mi_id = #{miId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yidu.domain.MatInv">
    update drug_mat_inv
    set mi_amount = #{miAmount,jdbcType=INTEGER},
      mat_id = #{matId,jdbcType=VARCHAR},
      isva = #{isva,jdbcType=VARCHAR},
      optime = #{optime,jdbcType=TIMESTAMP},
      oper = #{oper,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR}
    where mi_id = #{miId,jdbcType=VARCHAR}
  </update>
  
  <!-- 邓康威 -->
  <!-- 查询原材料名、材料类型名、库存所有   有原材料、原材料类型、库存 -->
  <select id="showList" parameterType="map" resultMap="BaseResultMap">
  	SELECT 
  	a.mat_name,b.mt_name,c.*
  	FROM drug_material a,drug_mat_type b,drug_mat_inv c WHERE a.mt_id=b.mt_id AND a.mat_id=c.mat_id
  	<if test="matinv.matName!=null and matinv.matName!='' ">
  	 and a.mat_name like concat("%",#{matinv.matName},"%")
  	</if>
  	<if test="matinv.mtName!=null and matinv.mtName!='' ">
  	 and b.mt_name like concat("%",#{matinv.mtName},"%")
  	</if>
  	limit #{page.startRows},#{page.rows}
  </select>
  
  <!-- 邓康威 -->
  <!-- 查询原材料名、材料类型名、库存的总行数   有原材料、原材料类型、库存 -->
  <select id="selectCount" parameterType="com.yidu.domain.MatInv" resultType="int">
  	SELECT count(*) FROM drug_material a,drug_mat_type b,drug_mat_inv c WHERE a.mt_id=b.mt_id AND a.mat_id=c.mat_id
  </select>
  
  <select id="findQcId" parameterType="string" resultMap="BaseResultMap">
	SELECT * FROM drug_mat_inv b WHERE b.mat_id=#{matId}
  </select>
  	
  	<!-- 查询库存是否足够 -->
   <select id="selectByamount" parameterType="com.yidu.domain.MatInv" resultMap="BaseResultMap">
    select *    from drug_mat_inv   where mat_id = #{matId,jdbcType=VARCHAR} and mi_amount=  #{miAmount,jdbcType=INTEGER}
  </select>
  
  
</mapper>